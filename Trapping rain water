class Solution {
public:
    int trap(vector<int>& height) {
        int n=height.size();
        if(n<=2){
return 0;}
        vector<int> left(n),right(n);
        left[0]=0;
        right[n-1]=0;
        int leftmax=height[0];
        for(int i=1;i<n;i++){
            left[i]=leftmax;
            leftmax=max(leftmax,height[i]);         
        }
        int rightmax=height[n-1];
        for(int i=n-2;i>=0;i--){
            right[i]=rightmax;
            rightmax=max(rightmax,height[i]);
        }
        int trappedwater=0;
        for(int i=1;i<n-1;i++){
            if(height[i]<left[i] and height[i]<right[i]){
                trappedwater+=min(left[i],right[i])-height[i];
            }          
        }
               return trappedwater;        
    }
};
